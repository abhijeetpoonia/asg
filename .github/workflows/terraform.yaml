name: Terraform Deployment

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout terraform repository
        uses: actions/checkout@v3
        with:
          repository: abhijeetpoonia/asg
          ref: main
          
      - name: Debug Directory Structure
        run: |
          pwd
          ls -la
          cd environments/dev
          ls -la
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
          
      - name: Terraform Init
        run: |
          cd environments/main
          terraform init
        
      - name: Terraform Validate
        run: |
          cd environments/main
          terraform validate
        
      - name: Terraform Plan
        run: |
          cd environments/main
          terraform plan
        
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: |
          cd environments/main
          terraform apply -auto-approve

      - name: Trigger Dope Repository Workflow
        if: github.ref == 'refs/heads/main'  # Trigger only on the 'main' branch
        uses: peter-evans/repository-dispatch@v1
        with:
          repository: abhijeetpoonia/dope  # Target repository (dope)
          event-type: trigger-pipeline  # Custom event name
          client-payload: '{"ref": "main", "environment": "main"}'  # Send payload with event details
          token: ${{ secrets.token }}  # Use GitHub token for authentication
